{"version":3,"sources":["components/ConfigScreen.tsx","components/shared.tsx","components/Field.tsx","components/EntryEditor.tsx","index.tsx"],"names":["Config","props","onConfigure","a","sdk","app","getCurrentState","currentState","parameters","state","targetState","EditorInterface","this","getParameters","setState","setReady","className","css","margin","Component","getEntryURL","entry","entryId","sys","id","spaceId","space","Field","field","locales","type","label","instance","extendedField","getForLocale","default","fieldDetails","contentType","fields","find","fieldEditorInterface","editor","editorInterface","controls","fieldId","widgetId","fieldSdk","settings","renderHeading","htmlFor","name","undefined","isInitiallyDisabled","renderField","Entry","tabNames","useState","tabs","setTabs","currentTab","setCurrentTab","fieldValues","setFieldValues","inUse","Object","values","length","fieldIdx","reduce","keys","getValue","forEach","onValueChanged","newValue","assign","extraFields","filter","includes","spacing","title","slug","role","withDivider","map","tab","selected","onSelect","component","components","data","embed","images","linkLabel","url","image","hideOnMobile","hideOnDesktop","heading","headingStyle","headingAlignment","mobileHeadingAlignment","headingColor","content","secondaryContent","contentLocation","fontSize","contentColor","alignment","mobileContentAlignment","buttons","topPadding","bottomPadding","innerTopPadding","innerBottomPadding","innerLeftPadding","innerRightPadding","height","containerWidth","backgroundImage","backgroundVideo","mobileBackgroundImage","backgroundStyle","backgroundSize","innerColor","backgroundColor","backgroundColorMobile","accentPosition","accents","customPath","cssClasses","init","root","document","getElementById","location","locations","LOCATION_APP_CONFIG","LOCATION_ENTRY_EDITOR","EntryEditor","componentLocationSetting","is","render"],"mappings":"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","file":"static/js/main.cd1c5291.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AppExtensionSDK } from '@contentful/app-sdk';\nimport { Heading, Form, Workbench, Paragraph } from '@contentful/forma-36-react-components';\nimport { css } from 'emotion';\n\nexport interface AppInstallationParameters {}\n\ninterface ConfigProps {\n  sdk: AppExtensionSDK;\n}\n\ninterface ConfigState {\n  parameters: AppInstallationParameters;\n}\n\nexport default class Config extends Component<ConfigProps, ConfigState> {\n  constructor(props: ConfigProps) {\n    super(props);\n    this.state = { parameters: {} };\n\n    // `onConfigure` allows to configure a callback to be\n    // invoked when a user attempts to install the app or update\n    // its configuration.\n    props.sdk.app.onConfigure(() => this.onConfigure());\n  }\n\n  async componentDidMount() {\n    // Get current parameters of the app.\n    // If the app is not installed yet, `parameters` will be `null`.\n    const parameters: AppInstallationParameters | null = await this.props.sdk.app.getParameters();\n\n    this.setState(parameters ? { parameters } : this.state, () => {\n      // Once preparation has finished, call `setReady` to hide\n      // the loading screen and present the app to a user.\n      this.props.sdk.app.setReady();\n    });\n  }\n\n  onConfigure = async () => {\n    // This method will be called when a user clicks on \"Install\"\n    // or \"Save\" in the configuration screen.\n    // for more details see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#register-an-app-configuration-hook\n\n    // Get current the state of EditorInterface and other entities\n    // related to this app installation\n    const currentState = await this.props.sdk.app.getCurrentState();\n\n    return {\n      // Parameters to be persisted as the app configuration.\n      parameters: this.state.parameters,\n      // In case you don't want to submit any update to app\n      // locations, you can just pass the currentState as is\n      targetState: {\n        EditorInterface: {\n          ...currentState?.EditorInterface\n        }\n\n      },\n    };\n  };\n\n  render() {\n    return (\n      <Workbench className={css({ margin: '80px' })}>\n        <Form>\n          <Heading>Section Config</Heading>\n          <Paragraph>There are currently no settings for the section app.</Paragraph>\n        </Form>\n      </Workbench>\n    );\n  }\n}\n","import React from 'react';\nimport { Entry } from '@contentful/field-editor-shared';\nimport { EditorExtensionSDK } from '@contentful/app-sdk';\nimport { AppState, FieldType, FieldGroupType, Action } from './types';\n\n// UTILS\nexport const findUnassignedFields = (appState: AppState): FieldType[] => {\n    const assignedFields = appState.fieldGroups\n        .flatMap((fg: FieldGroupType) => fg.fields)\n        .reduce((acc: { [key: string]: boolean }, field: FieldType) => {\n            acc[field.id] = true;\n            return acc;\n        }, {});\n\n    return appState.fields.filter((f) => !assignedFields[f.id]);\n};\n\nexport const getEntryURL = (entry: Entry) => {\n    const entryId = entry.sys.id;\n    const spaceId = entry.sys.space.sys.id;\n\n    return `https://app.contentful.com/spaces/${spaceId}/entries/${entryId}`;\n};\n\nexport const SDKContext = React.createContext<EditorExtensionSDK>(undefined!);\nexport const AppContext = React.createContext<{\n    state: AppState;\n    dispatch: React.Dispatch<Action>;\n}>(undefined!);\n// non null statement here is to avoid having to continually assert context\n// throughout the code","import React from \"react\";\nimport 'codemirror/lib/codemirror.css';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/field-editor-date/styles/styles.css';\nimport {\n    Field as BaseField,\n    FieldWrapper,\n} from '@contentful/default-field-editors';\nimport { getEntryURL } from './shared';\nimport {FormLabel} from \"@contentful/forma-36-react-components\";\n\n/* @ts-ignore */\nimport {EditorExtensionSDK, EntryFieldAPI, FieldExtensionSDK, LocalesAPI} from \"@contentful/app-sdk\";\n/* @ts-ignore */\n\nimport {ButtonsField, QAndAField, AccentsField, RepeatableField} from '@MalalaFundDev/contentful-components'\n\ninterface FieldProps {\n    field: EntryFieldAPI;\n    locales: LocalesAPI;\n    sdk: EditorExtensionSDK;\n    type: any;\n    label: any;\n    instance: Object;\n}\n\nexport const Field: React.FC<FieldProps> = ({ field, locales, sdk, type, label, instance = {} }) => {\n    const extendedField = field.getForLocale(sdk.locales.default);\n    const fieldDetails = sdk.contentType.fields.find(({ id }) => id === extendedField.id);\n    const fieldEditorInterface = sdk.editor.editorInterface?.controls?.find(\n        ({ fieldId }) => fieldId === extendedField.id\n    );\n    const widgetId = fieldEditorInterface?.widgetId ?? '';\n\n    if (!fieldDetails || !fieldEditorInterface) {\n        return null;\n    }\n\n    const fieldSdk: FieldExtensionSDK = {\n        ...sdk,\n        field: extendedField,\n        locales,\n        parameters: {\n            ...sdk.parameters,\n            instance: {\n                ...sdk.parameters.instance,\n                ...instance,\n                ...fieldEditorInterface?.settings,\n            },\n        },\n    } as any;\n\n    const renderHeading = label ? () => {\n        return <FormLabel htmlFor={fieldDetails.name}>{label}</FormLabel>\n    } : undefined\n\n    const renderField = function() {\n        switch (type) {\n            case '39ArQsK2hqsWsIK0WiCGMm':\n            case 'accents':\n                return  <AccentsField sdk={fieldSdk}/>\n            case 'buttons':\n                return  <ButtonsField sdk={fieldSdk}/>\n            case 'q&a':\n                return <QAndAField sdk={fieldSdk}/>\n            case 'repeatable':\n                return <RepeatableField sdk={fieldSdk} />\n            default:\n                return <BaseField widgetId={widgetId} sdk={fieldSdk} isInitiallyDisabled={false} />\n        }\n    }\n\n    return  <FieldWrapper sdk={fieldSdk} name={fieldDetails.name} getEntryURL={getEntryURL} renderHeading={renderHeading}>\n        {renderField()}\n    </FieldWrapper>\n};","import React, {useState} from 'react';\n\nimport {\n    Tabs,\n    Tab,\n    Form,\n    HelpText,\n    Card\n} from '@contentful/forma-36-react-components';\nimport {EditorExtensionSDK, EntryFieldAPI} from '@contentful/app-sdk';\nimport {Field} from './Field'\n\ninterface EditorProps {\n    sdk: EditorExtensionSDK;\n}\n\ninterface FieldValues {\n    [key: string]: any\n}\n\nconst Entry = (props: EditorProps) => {\n    const {entry, locales} = props.sdk\n    let tabNames: Array<string> = [\n        'General',\n        'Heading',\n        \"Content\",\n        \"Buttons\",\n        \"Spacing\",\n        \"Background\",\n        \"Accents\",\n        \"Advanced\"\n    ];\n    let [tabs, setTabs] = useState([...tabNames])\n    let [currentTab, setCurrentTab] = useState('General')\n    let [fieldValues, setFieldValues] = useState<FieldValues>({})\n    let inUse: Array<string> = [\n        'title',\n        'slug',\n        'component',\n        \"components\",\n        'cssClasses',\n        'type',\n        'data',\n        'embed',\n        'hideOnMobile',\n        'hideOnDesktop',\n        'heading',\n        'headingStyle',\n        'headingAlignment',\n        'innerColor',\n        'innerTopPadding',\n        'innerBottomPadding',\n        'innerLeftPadding',\n        'innerRightPadding',\n        'mobileHeadingAlignment',\n        'headingColor',\n        'content',\n        'contentColor',\n        'alignment',\n        'mobileContentAlignment',\n        'buttons',\n        'topPadding',\n        'bottomPadding',\n        'containerWidth',\n        'backgroundImage',\n        'mobileBackgroundImage',\n        'backgroundStyle',\n        'backgroundSize',\n        'backgroundColor',\n        'backgroundColorMobile',\n        'customPath',\n        'contentLocation',\n        'secondaryContent',\n        'accents',\n        'height',\n        'backgroundVideo',\n        \"fontSize\",\n        \"accentPosition\",\n        \"images\",\n    ]\n\n    //Keep track of the field values in state so we can rerender on field change\n    if (!Object.values(fieldValues).length) {\n        let fieldIdx = 0\n        setFieldValues(Object.values(entry.fields).reduce((fields: FieldValues, field): FieldValues => {\n            fields[Object.keys(entry.fields)[fieldIdx]] = field.getValue()\n            fieldIdx++;\n            return fields\n        }, {}))\n\n        Object.values(entry.fields).forEach((field: EntryFieldAPI) => {\n            field.onValueChanged((newValue) => {\n                if (fieldValues[field.id] !== newValue) {\n                    fieldValues[field.id] = newValue\n                    setFieldValues(Object.assign({}, fieldValues))\n                }\n            })\n        })\n    }\n\n    let extraFields = Object.values(entry.fields).filter((field: EntryFieldAPI) => {\n        return !inUse.includes(field.id)\n    })\n\n\n    function renderField(field: EntryFieldAPI, type: string | null = null, label: string | null = null, instance = {}) {\n        return <Field field={field} sdk={props.sdk} locales={locales} type={type} label={label} key={'field-' + field.id} instance={instance}/>\n    }\n\n    if (tabNames.length !== tabs.length) {\n        setTabs([...tabNames])\n    }\n\n\n    return <Form spacing=\"default\" className=\"f36-margin--2xl\">\n        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n            {renderField(entry.fields.title)}\n            {renderField(entry.fields.slug)}\n        </Card>\n\n        <Tabs\n            role=\"navigation\"\n            withDivider\n        >\n            {\n                tabs.map((tab) => {\n                    return <Tab selected={currentTab === tab} id={tab} onSelect={() => setCurrentTab(tab)}\n                                key={\"tab-\" + tab}>\n                        {tab}\n                    </Tab>;\n                })\n            }\n        </Tabs>\n\n        {\n            currentTab === 'General' ?  <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.type)}\n                </Card>\n                {\n                    entry.fields.type.getValue() === 'Entry' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.component)}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Entries' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.components)}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Q&A' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.data, 'q&a', 'Q&A')}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Embed' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.embed)}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Images' || entry.fields.type.getValue() === 'Photo Downloads' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.images)}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Photo Stack' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.data, 'repeatable', 'Images', {\n                                title: true,\n                                linkLabel: true,\n                                url: true,\n                                image: true,\n                            })}\n                        </Card>\n                    </div> : ''\n                }\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.hideOnMobile)}\n                    {renderField(entry.fields.hideOnDesktop)}\n                </Card>\n                {\n                    extraFields.length ?  <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {\n                                extraFields.map((field: EntryFieldAPI) => {\n                                    return renderField(field)\n                                })\n                            }\n                        </Card>\n                    </div> : ''\n                }\n            </div>: ''\n        }\n\n        {\n            currentTab === 'Heading' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.heading)}\n                </Card>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.headingStyle)}\n                    {renderField(entry.fields.headingAlignment)}\n                    {renderField(entry.fields.mobileHeadingAlignment)}\n                    {renderField(entry.fields.headingColor)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Content' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.content)}\n                    {\n                        entry.fields.type.getValue() === 'Button Sidebar' || entry.fields.type.getValue() === 'Embed' ? renderField(entry.fields.secondaryContent) : ''\n                    }\n                </Card>\n                <Card className={\"f36-padding--l\"}>\n                    {\n                        entry.fields.type.getValue() === 'Embed' ? renderField(entry.fields.contentLocation) : ''\n                    }\n                    {renderField(entry.fields.fontSize)}\n                    {renderField(entry.fields.contentColor)}\n                    {renderField(entry.fields.alignment)}\n                    {renderField(entry.fields.mobileContentAlignment)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Buttons' ? <div>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.buttons, 'buttons')}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Spacing' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.topPadding)}\n                    {renderField(entry.fields.bottomPadding)}\n                    {renderField(entry.fields.innerTopPadding)}\n                    {renderField(entry.fields.innerBottomPadding)}\n                    {renderField(entry.fields.innerLeftPadding)}\n                    {renderField(entry.fields.innerRightPadding)}\n                </Card>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.height)}\n                    {renderField(entry.fields.containerWidth)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Background' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.backgroundImage)}\n                    {renderField(entry.fields.backgroundVideo)}\n                    {renderField(entry.fields.mobileBackgroundImage)}\n                    {renderField(entry.fields.backgroundStyle)}\n                    {renderField(entry.fields.backgroundSize)}\n                    <HelpText>\n                        Example: 50px. Defaults to 100%.\n                    </HelpText>\n                </Card>\n\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.innerColor)}\n                    {renderField(entry.fields.backgroundColor)}\n                    {renderField(entry.fields.backgroundColorMobile)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Accents' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.accentPosition)}\n                    {renderField(entry.fields.accents, 'accents')}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Advanced' ? <div>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.customPath)}\n                    {renderField(entry.fields.cssClasses)}\n                </Card>\n            </div> : ''\n        }\n\n    </Form>;\n};\n\nexport default Entry;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport {\n  AppExtensionSDK,\n  EditorExtensionSDK,\n  init,\n  locations,\n} from '@contentful/app-sdk';\nimport 'codemirror/lib/codemirror.css';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/forma-36-fcss/dist/styles.css';\nimport '@contentful/forma-36-tokens/dist/css/index.css';\nimport './index.css';\n\nimport Config from './components/ConfigScreen';\nimport EntryEditor from './components/EntryEditor';\nimport LocalhostWarning from './components/LocalhostWarning';\n\nif (process.env.NODE_ENV === 'development' && window.self === window.top) {\n  // You can remove this if block before deploying your app\n  const root = document.getElementById('root');\n  render(<LocalhostWarning />, root);\n} else {\n  init((sdk) => {\n    const root = document.getElementById('root');\n\n    // All possible locations for your app\n    // Feel free to remove unused locations\n    // Dont forget to delete the file too :)\n    const ComponentLocationSettings = [\n      {\n        location: locations.LOCATION_APP_CONFIG,\n        component: <Config sdk={sdk as AppExtensionSDK} />,\n      },\n      {\n        location: locations.LOCATION_ENTRY_EDITOR,\n        component: <EntryEditor sdk={sdk as EditorExtensionSDK} />,\n      }\n    ];\n\n    // Select a component depending on a location in which the app is rendered.\n    ComponentLocationSettings.forEach((componentLocationSetting) => {\n      if (sdk.location.is(componentLocationSetting.location)) {\n        render(componentLocationSetting.component, root);\n      }\n    });\n  });\n}\n"],"sourceRoot":""}