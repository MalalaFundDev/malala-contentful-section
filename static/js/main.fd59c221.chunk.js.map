{"version":3,"sources":["components/ConfigScreen.tsx","components/shared.tsx","components/collapseCard.js","components/sortable.js","components/fieldGroup.js","components/buttons.js","components/editorField.js","components/qAndAField.js","components/imageField.js","components/accentsField.js","components/repeatableField.js","components/Field.tsx","components/EntryEditor.tsx","index.tsx"],"names":["Config","props","onConfigure","a","sdk","app","getCurrentState","currentState","parameters","state","targetState","EditorInterface","this","getParameters","setState","setReady","className","css","margin","Component","getEntryURL","entry","entryId","sys","id","spaceId","space","CollapseCard","spacing","marginTop","marginBottom","opened","heading","children","title","style","element","display","flexGrow","paddingLeft","renderCloseButton","placeholder","onClick","open","bind","renderSortUp","renderSortDown","iconProps","icon","label","close","sortable","canSortUp","onSortUp","paddingRight","canSortDown","onSortDown","renderOpened","renderClosed","React","Sortable","defaultItem","Object","assign","idx","items","length","buttonType","add","onChange","arrayMove","remove","push","splice","map","item","renderItem","FieldGroup","renderLabel","name","required","requiredText","htmlFor","testId","defaultProps","Buttons","detachExternalChangeHandler","onExternalChange","field","getValue","value","undefined","save","error","color","link","some","validate","setInvalid","setValue","moveUp","moveDown","labelText","e","currentTarget","renderAddButton","renderRemoveButton","renderValidation","onSortChange","EditorField","quill","createRef","nextProps","nextState","Quill","current","theme","modules","toolbar","on","handleChange","delta","oldDelta","source","QuillDeltaToHtmlConverter","getContents","ops","convert","ref","dangerouslySetInnerHTML","__html","QAndAField","question","answer","anchor","vid","console","log","ImageField","fields","flexDirection","alignItems","src","file","url","handleClick","status","publishedAt","handleRemove","renderMissing","handleCreate","handleLink","navigator","openNewAsset","slideIn","waitForClose","then","entity","handleLinked","dialogs","selectSingleAsset","openAsset","AccentsField","key","uniqid","width","height","top","right","bottom","left","image","desktop","tablet","mobile","parallax","speed","z","i","renderSettings","renderImage","size","openItem","colSpan","closeItem","helpText","checked","align","maxWidth","RepeatableField","description","linkLabel","instance","type","renderField","Field","locales","extendedField","getForLocale","default","fieldDetails","contentType","find","fieldEditorInterface","editor","editorInterface","controls","fieldId","widgetId","fieldSdk","settings","renderHeading","isInitiallyDisabled","Entry","tabNames","useState","tabs","setTabs","currentTab","setCurrentTab","fieldValues","setFieldValues","inUse","values","fieldIdx","reduce","keys","forEach","onValueChanged","newValue","extraFields","filter","includes","slug","role","withDivider","tab","selected","onSelect","component","data","embed","images","hideOnMobile","hideOnDesktop","headingStyle","headingAlignment","mobileHeadingAlignment","headingColor","content","secondaryContent","contentLocation","fontSize","contentColor","alignment","mobileContentAlignment","buttons","topPadding","bottomPadding","innerTopPadding","innerBottomPadding","innerLeftPadding","innerRightPadding","containerWidth","backgroundImage","backgroundVideo","mobileBackgroundImage","backgroundStyle","backgroundSize","innerColor","backgroundColor","backgroundColorMobile","accentPosition","accents","customPath","cssClasses","init","root","document","getElementById","location","locations","LOCATION_APP_CONFIG","LOCATION_ENTRY_EDITOR","EntryEditor","componentLocationSetting","is","render"],"mappings":"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","file":"static/js/main.fd59c221.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AppExtensionSDK } from '@contentful/app-sdk';\nimport { Heading, Form, Workbench, Paragraph } from '@contentful/forma-36-react-components';\nimport { css } from 'emotion';\n\nexport interface AppInstallationParameters {}\n\ninterface ConfigProps {\n  sdk: AppExtensionSDK;\n}\n\ninterface ConfigState {\n  parameters: AppInstallationParameters;\n}\n\nexport default class Config extends Component<ConfigProps, ConfigState> {\n  constructor(props: ConfigProps) {\n    super(props);\n    this.state = { parameters: {} };\n\n    // `onConfigure` allows to configure a callback to be\n    // invoked when a user attempts to install the app or update\n    // its configuration.\n    props.sdk.app.onConfigure(() => this.onConfigure());\n  }\n\n  async componentDidMount() {\n    // Get current parameters of the app.\n    // If the app is not installed yet, `parameters` will be `null`.\n    const parameters: AppInstallationParameters | null = await this.props.sdk.app.getParameters();\n\n    this.setState(parameters ? { parameters } : this.state, () => {\n      // Once preparation has finished, call `setReady` to hide\n      // the loading screen and present the app to a user.\n      this.props.sdk.app.setReady();\n    });\n  }\n\n  onConfigure = async () => {\n    // This method will be called when a user clicks on \"Install\"\n    // or \"Save\" in the configuration screen.\n    // for more details see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#register-an-app-configuration-hook\n\n    // Get current the state of EditorInterface and other entities\n    // related to this app installation\n    const currentState = await this.props.sdk.app.getCurrentState();\n\n    return {\n      // Parameters to be persisted as the app configuration.\n      parameters: this.state.parameters,\n      // In case you don't want to submit any update to app\n      // locations, you can just pass the currentState as is\n      targetState: {\n        EditorInterface: {\n          ...currentState?.EditorInterface\n        }\n\n      },\n    };\n  };\n\n  render() {\n    return (\n      <Workbench className={css({ margin: '80px' })}>\n        <Form>\n          <Heading>Section Config</Heading>\n          <Paragraph>There are currently no settings for the section app.</Paragraph>\n        </Form>\n      </Workbench>\n    );\n  }\n}\n","import React from 'react';\nimport { Entry } from '@contentful/field-editor-shared';\nimport { EditorExtensionSDK } from '@contentful/app-sdk';\nimport { AppState, FieldType, FieldGroupType, Action } from './types';\n\n// UTILS\nexport const findUnassignedFields = (appState: AppState): FieldType[] => {\n    const assignedFields = appState.fieldGroups\n        .flatMap((fg: FieldGroupType) => fg.fields)\n        .reduce((acc: { [key: string]: boolean }, field: FieldType) => {\n            acc[field.id] = true;\n            return acc;\n        }, {});\n\n    return appState.fields.filter((f) => !assignedFields[f.id]);\n};\n\nexport const getEntryURL = (entry: Entry) => {\n    const entryId = entry.sys.id;\n    const spaceId = entry.sys.space.sys.id;\n\n    return `https://app.contentful.com/spaces/${spaceId}/entries/${entryId}`;\n};\n\nexport const SDKContext = React.createContext<EditorExtensionSDK>(undefined!);\nexport const AppContext = React.createContext<{\n    state: AppState;\n    dispatch: React.Dispatch<Action>;\n}>(undefined!);\n// non null statement here is to avoid having to continually assert context\n// throughout the code","import React from 'react';\nimport {Card, SectionHeading, IconButton} from '@contentful/forma-36-react-components';\n\nexport class CollapseCard extends React.Component {\n    spacing={marginTop: \"15px\", marginBottom: \"15px\"}\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            opened: !!props.opened,\n        }\n    }\n\n    renderOpened() {\n        const {heading,  children} = this.props\n        return  <Card title='Item' style={this.spacing}>\n            <SectionHeading\n                element=\"h3\"\n            >\n                <div style={{display: 'flex'}}>\n                    <div style={{flexGrow: 1}}>\n                        {heading}\n                    </div>\n                    <div style={{flexGrow: 0, paddingLeft: '15px'}}>\n                        {this.renderCloseButton()}\n                    </div>\n                </div>\n            </SectionHeading>\n\n            {children}\n        </Card>\n    }\n\n    renderClosed() {\n        const {heading, placeholder} = this.props\n\n        return <Card title='Item' style={this.spacing}>\n            <SectionHeading\n                element=\"h3\"\n            >\n                <div style={{display: 'flex'}}>\n                    <div style={{flexGrow: 1}} onClick={this.open.bind(this)}>\n                        {placeholder ? placeholder : `New ${heading}`}\n                    </div>\n                    <div style={{flexGrow: 0, paddingLeft: '15px', display: 'flex'}}>\n                        {this.renderSortUp()}\n                        {this.renderSortDown()}\n                    </div>\n                </div>\n            </SectionHeading>\n        </Card>\n    }\n\n    renderCloseButton() {\n        const {opened} = this.state\n\n        if (!opened) {\n            return\n        }\n\n        return (\n            <IconButton\n                iconProps={{\n                    icon: 'Close'\n                }}\n                label=\"Close\"\n                onClick={this.close.bind(this)}\n            />\n        )\n    }\n\n    renderSortUp()\n    {\n        const {sortable, canSortUp, onSortUp} = this.props\n\n        if (!sortable || !canSortUp || !onSortUp) {\n            return\n        }\n\n        return <IconButton\n            iconProps={{\n                icon: 'ChevronUp'\n            }}\n            label=\"Move Up\"\n            onClick={onSortUp}\n            style={{paddingRight: '8px'}}\n        />\n    }\n\n    renderSortDown()\n    {\n        const {sortable, canSortDown, onSortDown} = this.props\n\n        if (!sortable || !canSortDown || !onSortDown) {\n            return\n        }\n\n        return <IconButton\n            iconProps={{\n                icon: 'ChevronDown'\n            }}\n            label=\"Move Up\"\n            onClick={onSortDown}\n            style={{paddingRight: '8px'}}\n        />\n    }\n\n    open()\n    {\n        this.setState({opened: true})\n    }\n\n    close()\n    {\n        this.setState({opened: false})\n    }\n\n    render() {\n        const {opened} = this.state\n\n        if (opened) {\n            return this.renderOpened()\n        }\n\n        return this.renderClosed()\n    }\n}\n\nexport default CollapseCard","import React from 'react';\nimport {IconButton} from '@contentful/forma-36-react-components';\nimport arrayMove from 'array-move'\n\nexport class Sortable extends React.Component {\n\n    get defaultItem() {\n        const {defaultItem} = this.props\n        return Object.assign({}, defaultItem)\n    }\n\n\n    renderAddButton(idx) {\n        const {items} = this.props\n\n        if (idx + 1 !== items.length) {\n            return\n        }\n\n        return (\n            <IconButton\n                iconProps={{\n                    icon: 'Plus'\n                }}\n                buttonType=\"positive\"\n                label=\"Add New Item\"\n                onClick={this.add.bind(this)}\n            />\n        )\n    }\n\n    moveUp(idx) {\n        if (idx < 1) {\n            return\n        }\n\n        let {onChange, items} = this.props\n\n        items = arrayMove(items, idx, idx - 1)\n\n        onChange(items)\n    }\n\n    moveDown(idx) {\n        let {onChange, items} = this.props\n\n        if (idx + 1 >= items.length) {\n            return\n        }\n\n        items = arrayMove(items, idx, idx + 1)\n\n        onChange(items)\n    }\n\n    renderRemoveButton(idx) {\n        const {items} = this.props\n\n        if (items.length <= 1) {\n            return\n        }\n\n        return (\n            <IconButton\n                iconProps={{\n                    icon: 'Delete'\n                }}\n                buttonType=\"negative\"\n                label=\"Remove Item\"\n                onClick={() => this.remove(idx)}\n            />\n        )\n    }\n\n    add()\n    {\n        let {onChange, items} = this.props\n\n        items.push(this.defaultItem)\n\n        onChange(items)\n    }\n\n    remove(idx)\n    {\n        let {onChange, items} = this.props\n\n        items.splice(idx, 1);\n\n        onChange(items)\n    }\n\n    render() {\n        const {items} = this.props\n\n        return (\n            <div className={'sortable'}>\n                { items.map((item, idx) => this.renderItem(item, idx)) }\n            </div>\n        )\n    }\n\n    renderItem(item, idx) {\n        const {renderItem} = this.props\n\n        return <div className={'sortable__item'} key={`sortable-${idx}`}>\n            { renderItem({item, idx, Sortable: this})}\n        </div>\n    }\n}\n\nexport default Sortable\n","import React from \"react\";\nimport {\n    FormLabel\n} from '@contentful/forma-36-react-components';\n\nexport class FieldGroup extends React.Component {\n\n    render() {\n        const {margin, children} = this.props\n\n        return <div style={{marginTop: margin, marginBottom: margin}}>\n\n            { this.renderLabel() }\n\n            { children }\n        </div>\n    }\n\n    renderLabel() {\n        const {name, required, requiredText, label} = this.props\n\n        if (!label) {\n            return\n        }\n\n        return <FormLabel\n            htmlFor={name}\n            required={required}\n            requiredText={requiredText}\n            testId={name}\n        >\n            {label}\n        </FormLabel>\n    }\n}\n\nFieldGroup.defaultProps = {\n    margin: '15px',\n    requiredText: 'required'\n}\n\n\nexport default FieldGroup","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {TextField, ValidationMessage, SelectField, Option} from '@contentful/forma-36-react-components';\nimport {CollapseCard} from \"./collapseCard\";\nimport {Sortable} from \"./sortable\";\nimport {FieldGroup} from \"./fieldGroup\";\n\nexport class Buttons extends React.Component {\n    static propTypes = {\n        sdk: PropTypes.object.isRequired\n    };\n    detachExternalChangeHandler = null;\n\n    get defaultItem() {\n        return Object.assign({}, {\n            label: '',\n            color: 'transparent',\n            link: '',\n            icon: ''\n        })\n    }\n\n\n    constructor(props) {\n        super(props);\n\n        let items = props.sdk.field.getValue() ? props.sdk.field.getValue() : [this.defaultItem];\n\n        this.state = {\n            items,\n            error: null\n        }\n    }\n\n    onExternalChange = () => {\n        let items = this.props.sdk.field.getValue();\n\n        if (!items) {\n            items = [this.defaultItem]\n        }\n\n        this.setState({items});\n    };\n\n    onChange = (field, idx, value) => {\n        let {items} = this.state;\n\n        if (items[idx] === undefined) {\n            items[idx] = this.defaultItem\n        }\n\n        items[idx][field] = value\n\n        this.save(items)\n    };\n\n    onSortChange(items)\n    {\n        this.save(items)\n    }\n\n    validate()\n    {\n        let {items} = this.state;\n\n        return !items.some((item) => {\n            return !item.label || !item.color || !item.link\n        })\n    }\n\n    save(items) {\n        this.setState({items});\n\n        if (!this.validate()) {\n            this.setState({error: 'Please complete all required fields.'})\n            this.props.sdk.field.setInvalid(true)\n        } else {\n            this.setState({error: null})\n            this.props.sdk.field.setInvalid(false)\n        }\n\n        this.props.sdk.field.setValue(items)\n    }\n\n    renderItem({item, idx, Sortable}) {\n        const {items} = this.state\n\n        return (\n            <CollapseCard key={'item-' + idx}\n                          heading='Item'\n                          placeholder={item.title}\n                          opened={!item.title}\n                          sortable={true}\n                          canSortUp={!!idx}\n                          onSortUp={() => Sortable.moveUp(idx)}\n                          canSortDown={idx + 1 !== items.length}\n                          onSortDown={() => Sortable.moveDown(idx)}\n            >\n\n                <TextField id={`label-${idx}`} name=\"label\" labelText={'Label'} value={item.label} onChange={(e) => this.onChange('label', idx, e.currentTarget.value)} required />\n\n                <FieldGroup>\n                    <SelectField id={`color-${idx}`} name={\"color\"} labelText={\"Color\"} value={item.color} onChange={(e) => this.onChange('color', idx, e.currentTarget.value)} required>\n                        <Option value={'transparent'}>Transparent</Option>\n                        <Option value={'white'}>White</Option>\n                        <Option value={'malala'}>Malala</Option>\n                        <Option value={'link'}>Link</Option>\n                    </SelectField>\n                </FieldGroup>\n\n                <FieldGroup>\n                    <TextField id={`link-${idx}`} name=\"link\" labelText={'Link'} value={item.link} onChange={(e) => this.onChange('link', idx, e.currentTarget.value)} required />\n                </FieldGroup>\n\n                <FieldGroup>\n                    <SelectField id={`icon-${idx}`} name={\"icon\"} labelText={\"Icon\"} value={item.icon} onChange={(e) => this.onChange('icon', idx, e.currentTarget.value)}>\n                        <Option value={''}>No Icon</Option>\n                        <Option value={'chevron'}>Chevron</Option>\n                        <Option value={'arrow'}>Arrow</Option>\n                    </SelectField>\n                </FieldGroup>\n\n                <div style={{marginTop: \"15px\"}}>\n                    { Sortable.renderAddButton(idx) }\n                    { Sortable.renderRemoveButton(idx) }\n                </div>\n\n            </CollapseCard>\n        )\n    }\n\n    renderValidation()\n    {\n        const {error} = this.state\n\n        if (!error) {\n            return\n        }\n\n        return (\n            <ValidationMessage>\n                {error}\n            </ValidationMessage>\n        )\n    }\n\n    render() {\n        const {items} = this.state\n\n        return  <div>\n            { this.renderValidation() }\n            <Sortable\n                defaultItem={this.defaultItem}\n                onChange={(items) => this.onSortChange(items)}\n                items={items}\n                renderItem={this.renderItem.bind(this)}\n            />\n        </div>\n    }\n}\n\nexport default Buttons\n\n/**\n * By default, iframe of the extension is fully reloaded on every save of a source file.\n * If you want to use HMR (hot module reload) instead of full reload, uncomment the following lines\n */\n// if (module.hot) {\n//   module.hot.accept();\n// }\n","/*global Quill */\nimport React from \"react\";\nimport { QuillDeltaToHtmlConverter } from 'quill-delta-to-html';\n\nexport class EditorField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.quill = null\n\n        this.field = React.createRef()\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n\n    componentDidMount() {\n        if (typeof Quill !== 'undefined') {\n            this.quill = new Quill(this.field.current, {\n                theme: 'snow',\n                modules: {\n                    toolbar: [\n                        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n                        ['blockquote'],\n                        [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n                        [{ 'list': 'ordered'}, { 'list': 'bullet' }, 'link'],\n                        [{ 'size': ['small', 'normal', 'large', 'huge'] }],  // custom dropdown\n                        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                        [{ 'align': [] }],\n                        ['clean']                                         // remove formatting button\n                    ]\n                }\n            });\n        }\n\n        if (!this.quill) {\n            return\n        }\n\n        this.quill.on('text-change', this.handleChange.bind(this))\n    }\n\n    handleChange(delta, oldDelta, source) {\n        const {onChange} = this.props\n        const converter = new QuillDeltaToHtmlConverter(this.quill.getContents().ops);\n        const html = converter.convert()\n        onChange(html)\n    }\n\n    render() {\n        let {value} = this.props\n\n        return <div ref={this.field} dangerouslySetInnerHTML={{__html: value}} />\n    }\n}\n\nexport default EditorField","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {TextField, ValidationMessage, FormLabel, HelpText} from '@contentful/forma-36-react-components';\nimport {CollapseCard} from \"./collapseCard\";\nimport {Sortable} from \"./sortable\";\nimport {FieldGroup} from \"./fieldGroup\";\nimport {EditorField} from './editorField'\n\nexport class QAndAField extends React.Component {\n    static propTypes = {\n        sdk: PropTypes.object.isRequired\n    };\n    detachExternalChangeHandler = null;\n\n    get defaultItem() {\n        return Object.assign({}, {\n            question: '',\n            answer: '',\n            anchor: ''\n        })\n    }\n\n\n    constructor(props) {\n        super(props);\n\n        let items = props.sdk.field.getValue() ? props.sdk.field.getValue() : [this.defaultItem];\n\n        this.state = {\n            items,\n            error: null\n        }\n    }\n\n    onExternalChange = () => {\n        let items = this.props.sdk.field.getValue();\n\n        if (!items) {\n            items = [this.defaultItem]\n        }\n\n        this.setState({items});\n    };\n\n    onChange = (field, idx, value) => {\n        let {items} = this.state;\n\n        if (items[idx] === undefined) {\n            items[idx] = this.defaultItem\n        }\n\n        items[idx][field] = value\n\n        this.save(items)\n    };\n\n    onSortChange(items)\n    {\n        this.save(items)\n    }\n\n    validate()\n    {\n        let {items} = this.state;\n\n        return !items.some((item) => {\n            return !item.question || !item.answer\n        })\n    }\n\n    save(items) {\n        this.setState({items});\n\n        if (!this.validate()) {\n            this.setState({error: 'Please complete all required fields.'})\n            this.props.sdk.field.setInvalid(true)\n        } else {\n            this.setState({error: null})\n            this.props.sdk.field.setInvalid(false)\n        }\n\n        this.props.sdk.field.setValue(items)\n    }\n\n    renderItem({item, idx, Sortable}) {\n        const {items} = this.state\n\n        try {\n            return (\n                <CollapseCard key={'item-' + idx}\n                              heading='Item'\n                              placeholder={item.question}\n                              opened={!item.question}\n                              sortable={true}\n                              canSortUp={!!idx}\n                              onSortUp={() => Sortable.moveUp(idx)}\n                              canSortDown={idx + 1 !== items.length}\n                              onSortDown={() => Sortable.moveDown(idx)}\n                >\n\n                    <TextField id={`question-${idx}`} name=\"questions\" labelText={'Question'} value={item.question} onChange={(e) => this.onChange('question', idx, e.currentTarget.value)} required />\n\n                    <FieldGroup>\n                        <FormLabel htmlFor={`answer-${idx}`} required>\n                            Answer\n                        </FormLabel>\n                        <EditorField vid={`answer-${idx}`} name=\"answer\" value={item.answer} onChange={value => this.onChange('answer', idx, value)} required />\n                    </FieldGroup>\n\n                    <TextField id={`anchor-${idx}`} name=\"anchor\" labelText={'Anchor'} value={item.anchor} onChange={(e) => this.onChange('anchor', idx, e.currentTarget.value)} />\n                    <HelpText>\n                        malala.org/page#{item.anchor ? item.anchor : 'anchor'}\n                    </HelpText>\n\n                    <div style={{marginTop: \"15px\"}}>\n                        { Sortable.renderAddButton(idx) }\n                        { Sortable.renderRemoveButton(idx) }\n                    </div>\n                </CollapseCard>\n            )\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    renderValidation()\n    {\n        const {error} = this.state\n\n        if (!error) {\n            return\n        }\n\n        return (\n            <ValidationMessage>\n                {error}\n            </ValidationMessage>\n        )\n    }\n\n    render() {\n        const {items} = this.state\n\n        return  <div>\n            { this.renderValidation() }\n            <Sortable\n                defaultItem={this.defaultItem}\n                onChange={(items) => this.onSortChange(items)}\n                items={items}\n                renderItem={this.renderItem.bind(this)}\n            />\n        </div>\n    }\n}\n\nexport default QAndAField\n\n/**\n * By default, iframe of the extension is fully reloaded on every save of a source file.\n * If you want to use HMR (hot module reload) instead of full reload, uncomment the following lines\n */\n// if (module.hot) {\n//   module.hot.accept();\n// }\n","import React from \"react\";\nimport {IconButton, TextLink, AssetCard} from '@contentful/forma-36-react-components'\n\nexport class ImageField extends React.Component {\n    render() {\n        let {value} = this.props\n\n        if (!value || !value.fields) {\n            return this.renderMissing()\n        }\n\n        return  <div style={{display: \"flex\", flexDirection: 'row', alignItems: 'flex-start'}}>\n            <AssetCard src={ value.fields.file['en-US'].url } title={value.fields.title['en-US']} onClick={this.handleClick.bind(this)} status={!!value.sys.publishedAt ? 'published' : 'draft'}>\n                {value.fields.title['en-US']}\n            </AssetCard>\n            <IconButton buttonType={'negative'} iconProps={{\n                icon: 'Close',\n            }}\n             label=\"Close\"\n             onClick={this.handleRemove.bind(this)} />\n        </div>\n    }\n\n    renderMissing()\n    {\n        return <div className={\"image__missing\"}>\n            <TextLink onClick={this.handleCreate.bind(this)} icon=\"Plus\">Create new asset and link</TextLink>\n            <span style={{paddingLeft: '10px', paddingRight: '10px'}}/>\n            <TextLink onClick={this.handleLink.bind(this)}  icon=\"Link\">Link existing assets</TextLink>\n        </div>\n    }\n\n    handleCreate()\n    {\n        const {sdk} = this.props\n        sdk.navigator.openNewAsset({ slideIn: { waitForClose: true } }).then(({ entity }) => this.handleLinked(entity))\n    }\n\n    handleLink()\n    {\n        const {sdk} = this.props;\n\n        sdk.dialogs.selectSingleAsset(null, { slideIn: { waitForClose: true } }).then(this.handleLinked.bind(this))\n    }\n\n    handleClick()\n    {\n        const {sdk, value} = this.props\n\n        sdk.navigator.openAsset(value.sys.id, { slideIn: {} })\n    }\n\n    handleRemove()\n    {\n        const {onChange} = this.props\n\n        onChange(null)\n    }\n\n    handleLinked(entity)\n    {\n        const {onChange} = this.props\n\n        onChange(entity)\n    }\n}\n\nexport default ImageField","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Asset,\n    TextField,\n    ValidationMessage,\n    Table,\n    TableCell,\n    TableBody,\n    TableRow,\n    FormLabel,\n    CheckboxField, SelectField, Option,\n    Icon\n} from '@contentful/forma-36-react-components';\nimport {CollapseCard} from \"./collapseCard\";\nimport {Sortable} from \"./sortable\";\nimport {FieldGroup} from \"./fieldGroup\";\nimport {ImageField} from './imageField'\nimport uniqid from 'uniqid'\n\nexport class AccentsField extends React.Component {\n    static propTypes = {\n        sdk: PropTypes.object.isRequired\n    };\n    detachExternalChangeHandler = null;\n\n    get defaultItem() {\n        return Object.assign({}, {\n            key: uniqid(),\n            width: '50px',\n            height: '50px',\n            top: '',\n            right: '',\n            bottom: '',\n            left: '',\n            image: '',\n            desktop: true,\n            tablet: true,\n            mobile: true,\n            parallax: true,\n            speed: '1',\n            z: '1',\n            open: false\n        })\n    }\n\n\n    constructor(props) {\n        super(props);\n\n        let items = props.sdk.field.getValue() ? props.sdk.field.getValue() : [this.defaultItem];\n        items = items.map(item => {\n            if (!item.key) {\n                item.key = uniqid()\n            }\n            item.open = false\n            return item\n        })\n\n        this.state = {\n            items,\n            error: null\n        }\n    }\n\n    onExternalChange = () => {\n        let items = this.props.sdk.field.getValue();\n\n        if (!items) {\n            items = [this.defaultItem]\n        }\n\n        this.setState({items});\n    };\n\n    onChange = (field, idx, value) => {\n        let {items} = this.state;\n\n        if (items[idx] === undefined) {\n            items[idx] = this.defaultItem\n        }\n\n        items[idx][field] = value\n\n        this.save(items)\n    };\n\n    openItem(item) {\n        let {items} = this.state;\n        items = items.map((i) => {\n            if (i.key === item.key) {\n                i.open = true\n            }\n            return i\n        })\n        this.setState(items)\n    }\n\n    closeItem(item) {\n        let {items} = this.state;\n        items = items.map((i) => {\n            if (i.key === item.key) {\n                i.open = false\n            }\n            return i\n        })\n        this.setState(items)\n    }\n\n    onSortChange(items) {\n        this.save(items)\n    }\n\n    validate() {\n        let {items} = this.state;\n\n        return !items.some((item) => {\n            return !item.image\n        })\n    }\n\n    save(items) {\n        this.setState({items});\n\n        if (!this.validate()) {\n            this.setState({error: 'Please complete all required fields.'})\n            this.props.sdk.field.setInvalid(true)\n        } else {\n            this.setState({error: null})\n            this.props.sdk.field.setInvalid(false)\n        }\n\n        this.props.sdk.field.setValue(items)\n    }\n\n    renderItem({item, idx, Sortable}) {\n        const {items} = this.state\n\n        return (\n            <CollapseCard key={'item-' + idx}\n                          heading='Image'\n                          placeholder={item.title}\n                          opened={!item.title}\n                          sortable={true}\n                          canSortUp={!!idx}\n                          onSortUp={() => Sortable.moveUp(idx)}\n                          canSortDown={idx + 1 !== items.length}\n                          onSortDown={() => Sortable.moveDown(idx)}\n            >\n                {item.open ? this.renderSettings(item, idx) : this.renderImage(item, idx)}\n\n                <div style={{marginTop: \"15px\"}}>\n                    {Sortable.renderAddButton(idx)}\n                    {Sortable.renderRemoveButton(idx)}\n                </div>\n\n            </CollapseCard>\n        )\n    }\n\n    renderImage(item, idx) {\n        return <FieldGroup>\n            <div style={{display: \"flex\"}}>\n                <ImageField id={`image-${idx}`} sdk={this.props.sdk}\n                            onChange={(value) => this.onChange('image', idx, value)}\n                            value={item.image}/>\n                <div style={{paddingLeft: '15px', paddingRight: '15px'}}>\n                    <Icon icon=\"Settings\" size=\"small\" onClick={() => this.openItem(item)}/>\n                </div>\n            </div>\n\n        </FieldGroup>\n    }\n\n    renderSettings(item, idx) {\n        return <div>\n            <Table style={{width: '100%'}}>\n                <TableBody>\n                    <TableRow>\n                        <TableCell colSpan={2} onClick={() => this.closeItem(item)}>\n                            {item.image ? <Asset src={item.image.fields.file['en-US'].url} style={{width: \"50px\"}}/> : <Icon icon=\"Asset\" size=\"large\" />}\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>\n                            <FieldGroup>\n                                <TextField id={`width-${idx}`} name=\"width\" labelText={'width'} value={item.width}\n                                           onChange={(e) => this.onChange('width', idx, e.currentTarget.value)}\n                                           helpText=\"Example: 50px\" required/>\n                            </FieldGroup>\n\n                            <FieldGroup>\n                                <TextField id={`height-${idx}`} name=\"height\" labelText={'height'} value={item.height}\n                                           onChange={(e) => this.onChange('height', idx, e.currentTarget.value)}\n                                           helpText=\"Example: 50px\" required/>\n                            </FieldGroup>\n\n\n                            <FieldGroup>\n                                <TextField id={`z-${idx}`} name=\"z\" labelText={'Stack order'} value={item.z}\n                                           onChange={(e) => this.onChange('z', idx, e.currentTarget.value)}\n                                           helpText=\"Higher numbers will display on top\"/>\n                            </FieldGroup>\n\n                            <FieldGroup>\n                                <FormLabel htmlFor={`show-on-${idx}`}>\n                                    Show on\n                                </FormLabel>\n                                <div id={`show-on-${idx}`}>\n                                    <CheckboxField id={`desktop-${idx}`} labelText={'Desktop'}  name=\"desktop\" checked={item.desktop}\n                                                   onChange={(e) => this.onChange('desktop', idx, e.currentTarget.checked)} style={{\"marginRight\": \"5px\"}}\n                                    />\n\n                                    <CheckboxField id={`tablet-${idx}`} labelText={'Tablet'}  name=\"tablet\" checked={item.tablet}\n                                                   onChange={(e) => this.onChange('tablet', idx, e.currentTarget.checked)}  style={{\"marginRight\": \"5px\"}}\n                                    />\n\n                                    <CheckboxField id={`mobile-${idx}`} labelText={'Mobile'}  name=\"mobile\" checked={item.mobile}\n                                                   onChange={(e) => this.onChange('mobile', idx, e.currentTarget.checked)}\n                                    />\n                                </div>\n                            </FieldGroup>\n\n                            <FieldGroup>\n                                <CheckboxField id={`parallax-${idx}`} labelText={'Enable parallax scrolling?'}  name=\"parallax\" checked={item.parallax !== false}\n                                               onChange={(e) => this.onChange('parallax', idx, e.currentTarget.checked)} style={{\"marginRight\": \"5px\"}}\n                                />\n                            </FieldGroup>\n\n                            {item.parallax !== false ? <FieldGroup>\n                                <SelectField id={`speed-${idx}`} name={\"speed\"} labelText={\"Speed\"} value={item.speed} onChange={(e) => this.onChange('speed', idx, e.currentTarget.value)}>\n                                    <Option value={'1'}>1</Option>\n                                    <Option value={'2'}>2</Option>\n                                    <Option value={'3'}>3</Option>\n                                </SelectField>\n                            </FieldGroup> : ''}\n                        </TableCell>\n                        <TableCell align={\"center\"}>\n                            <FieldGroup>\n                                <div style={{\"textAlign\": \"left\"}}>\n                                    <FormLabel htmlFor={'position'}>\n                                        Position\n                                    </FormLabel>\n                                </div>\n\n\n                                <table style={{maxWidth: '300px'}} id={'position'}>\n                                    <tbody>\n                                    <tr>\n                                        <td/>\n                                        <td>\n                                            <TextField id={`top-${idx}`} name=\"Top\" labelText={'Top'}\n                                                       value={item.top}\n                                                       onChange={(e) => this.onChange('top', idx, e.currentTarget.value)}\n                                                       helpText=\"Example: 10%\"/>\n                                        </td>\n                                        <td/>\n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <TextField id={`left-${idx}`} name=\"left\" labelText={'Left'}\n                                                       value={item.left}\n                                                       onChange={(e) => this.onChange('left', idx, e.currentTarget.value)}/>\n                                        </td>\n                                        <td/>\n                                        <td>\n                                            <TextField id={`right-${idx}`} name=\"right\" labelText={'Right'}\n                                                       value={item.right}\n                                                       onChange={(e) => this.onChange('right', idx, e.currentTarget.value)}/>\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <td/>\n                                        <td>\n                                            <TextField id={`bottom-${idx}`} name=\"bottom\" labelText={'Bottom'}\n                                                       value={item.bottom}\n                                                       onChange={(e) => this.onChange('bottom', idx, e.currentTarget.value)}/>\n                                        </td>\n                                        <td/>\n                                    </tr>\n                                    </tbody>\n                                </table>\n\n\n                            </FieldGroup>\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </div>\n    }\n\n    renderValidation() {\n        const {error} = this.state\n\n        if (!error) {\n            return\n        }\n\n        return (\n            <ValidationMessage>\n                {error}\n            </ValidationMessage>\n        )\n    }\n\n    render() {\n        const {items} = this.state\n\n        return <div>\n            {this.renderValidation()}\n            <Sortable\n                defaultItem={this.defaultItem}\n                onChange={(items) => this.onSortChange(items)}\n                items={items}\n                renderItem={this.renderItem.bind(this)}\n            />\n        </div>\n    }\n}\n\nexport default AccentsField\n\n/**\n * By default, iframe of the extension is fully reloaded on every save of a source file.\n * If you want to use HMR (hot module reload) instead of full reload, uncomment the following lines\n */\n// if (module.hot) {\n//   module.hot.accept();\n// }\n","import React from \"react\";\nimport {FormLabel, ValidationMessage, TextInput} from \"@contentful/forma-36-react-components\";\nimport PropTypes from \"prop-types\";\nimport Sortable from './sortable'\nimport CollapseCard from './collapseCard'\nimport EditorField from './editorField'\nimport ImageField from './imageField'\n\nexport class RepeatableField extends React.Component {\n    static propTypes = {\n        sdk: PropTypes.object.isRequired\n    };\n\n    get defaultItem() {\n        return Object.assign({}, {\n            title: '',\n            image: null,\n            description: '',\n            linkLabel: '',\n            url: ''\n        })\n    }\n\n\n    constructor(props) {\n        super(props);\n\n        let value = props.sdk.field.getValue() ? props.sdk.field.getValue() : {items: [this.defaultItem]};\n\n\n        this.state = {\n            items: value.items ? value.items : [this.defaultItem],\n            error: null\n        }\n    }\n\n    onChange = (field, idx, value) => {\n        let {items} = this.state;\n\n        if (items[idx] === undefined) {\n            items[idx] = this.defaultItem\n        }\n\n        items[idx][field] = value\n\n        this.save(items)\n    };\n\n    onSortChange(items)\n    {\n        this.save(items)\n    }\n\n    validate()\n    {\n        let {items} = this.state;\n\n        return !items.some((item) => {\n            return !item.image\n                || (this.props.sdk.parameters.instance.title && !item.title)\n        })\n    }\n\n    save(items) {\n        this.setState({items});\n\n        if (!this.validate()) {\n            this.setState({error: 'Please complete all required fields.'})\n            this.props.sdk.field.setInvalid(true)\n        } else {\n            this.setState({error: null})\n            this.props.sdk.field.setInvalid(false)\n        }\n\n        this.props.sdk.field.setValue({items})\n    }\n\n    renderField(idx, name, label, value, type = 'text', required = false) {\n        return (\n            <div style={{marginTop: \"15px\", marginBottom: \"15px\"}}>\n                <FormLabel\n                    htmlFor={name}\n                    required={required}\n                    requiredText=\"required\"\n                    testId={name}\n                >\n                    {label}\n                </FormLabel>\n\n                {(() => {\n                    switch (type) {\n                        case 'editor':\n                            return  <EditorField\n                                value={value}\n                                onChange={value => this.onChange(name, idx, value)}\n                            />;\n                        case 'image':\n                            return <ImageField\n                                value={value}\n                                sdk={this.props.sdk}\n                                onChange={value => this.onChange(name, idx, value)}\n                            />;\n                        default:\n                            return <TextInput\n                                width=\"full\"\n                                type={type}\n                                id={name}\n                                testId={name}\n                                value={value}\n                                required={true}\n                                onChange={(e) => this.onChange(name, idx, e.currentTarget.value)}\n                            />;\n                    }\n                })()}\n            </div>\n        )\n    }\n\n    renderItem({item, idx, Sortable}) {\n        const {items} = this.state\n\n        return (\n            <CollapseCard key={'item-' + idx}\n                          heading='Item'\n                          placeholder={item.title}\n                          opened={!item.title}\n                          sortable={true}\n                          canSortUp={!!idx}\n                          onSortUp={() => Sortable.moveUp(idx)}\n                          canSortDown={idx + 1 !== items.length}\n                          onSortDown={() => Sortable.moveDown(idx)}\n            >\n                {this.props.sdk.parameters.instance.title ? this.renderField(idx, 'title', 'Title', item.title, 'text') : null}\n                {this.props.sdk.parameters.instance.description ? this.renderField(idx, 'description', 'Description', item.description, 'editor') : null}\n                {this.props.sdk.parameters.instance.linkLabel ? this.renderField(idx, 'linkLabel', 'Link Label', item.linkLabel, 'text') : null}\n                {this.props.sdk.parameters.instance.url ? this.renderField(idx, 'url', 'Url', item.url, 'text') : null}\n                {this.props.sdk.parameters.instance.image ? this.renderField(idx, 'image', 'Image', item.image, 'image', true) : null}\n\n                <div style={{marginTop: \"15px\"}}>\n                    { Sortable.renderAddButton(idx) }\n                    { Sortable.renderRemoveButton(idx) }\n                </div>\n\n            </CollapseCard>\n        )\n    }\n\n    renderValidation()\n    {\n        const {error} = this.state\n\n        if (!error) {\n            return\n        }\n\n        return (\n            <ValidationMessage>\n                {error}\n            </ValidationMessage>\n        )\n    }\n\n    render() {\n        const {items} = this.state\n\n        return  <div>\n            { this.renderValidation() }\n            <Sortable\n                defaultItem={this.defaultItem}\n                onChange={(items) => this.onSortChange(items)}\n                items={items}\n                renderItem={this.renderItem.bind(this)}\n            />\n        </div>\n    }\n}\n\nexport default RepeatableField","import React from \"react\";\nimport 'codemirror/lib/codemirror.css';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/field-editor-date/styles/styles.css';\nimport {\n    Field as BaseField,\n    FieldWrapper,\n} from '@contentful/default-field-editors';\nimport { getEntryURL } from './shared';\nimport {FormLabel} from \"@contentful/forma-36-react-components\";\n\n/* @ts-ignore */\nimport {EditorExtensionSDK, EntryFieldAPI, FieldExtensionSDK, LocalesAPI} from \"@contentful/app-sdk\";\n/* @ts-ignore */\nimport ButtonsField from './buttons'\nimport QAndAField from './qAndAField'\nimport AccentsField from './accentsField'\nimport RepeatableField from './repeatableField'\n\ninterface FieldProps {\n    field: EntryFieldAPI;\n    locales: LocalesAPI;\n    sdk: EditorExtensionSDK;\n    type: any;\n    label: any;\n    instance: Object;\n}\n\nexport const Field: React.FC<FieldProps> = ({ field, locales, sdk, type, label, instance = {} }) => {\n    const extendedField = field.getForLocale(sdk.locales.default);\n    const fieldDetails = sdk.contentType.fields.find(({ id }) => id === extendedField.id);\n    const fieldEditorInterface = sdk.editor.editorInterface?.controls?.find(\n        ({ fieldId }) => fieldId === extendedField.id\n    );\n    const widgetId = fieldEditorInterface?.widgetId ?? '';\n\n    if (!fieldDetails || !fieldEditorInterface) {\n        return null;\n    }\n\n    const fieldSdk: FieldExtensionSDK = {\n        ...sdk,\n        field: extendedField,\n        locales,\n        parameters: {\n            ...sdk.parameters,\n            instance: {\n                ...sdk.parameters.instance,\n                ...instance,\n                ...fieldEditorInterface?.settings,\n            },\n        },\n    } as any;\n\n    const renderHeading = label ? () => {\n        return <FormLabel htmlFor={fieldDetails.name}>{label}</FormLabel>\n    } : undefined\n\n    const renderField = function() {\n        switch (type) {\n            case '39ArQsK2hqsWsIK0WiCGMm':\n            case 'accents':\n                return  <AccentsField sdk={fieldSdk}/>\n            case 'buttons':\n                return  <ButtonsField sdk={fieldSdk}/>\n            case 'q&a':\n                return <QAndAField sdk={fieldSdk}/>\n            case 'repeatable':\n                return <RepeatableField sdk={fieldSdk} />\n            default:\n                return <BaseField widgetId={widgetId} sdk={fieldSdk} isInitiallyDisabled={false} />\n        }\n    }\n\n    return  <FieldWrapper sdk={fieldSdk} name={fieldDetails.name} getEntryURL={getEntryURL} renderHeading={renderHeading}>\n        {renderField()}\n    </FieldWrapper>\n};","import React, {useState} from 'react';\n\nimport {\n    Tabs,\n    Tab,\n    Form,\n    HelpText,\n    Card\n} from '@contentful/forma-36-react-components';\nimport {EditorExtensionSDK, EntryFieldAPI} from '@contentful/app-sdk';\nimport {Field} from './Field'\n\ninterface EditorProps {\n    sdk: EditorExtensionSDK;\n}\n\ninterface FieldValues {\n    [key: string]: any\n}\n\nconst Entry = (props: EditorProps) => {\n    const {entry, locales} = props.sdk\n    let tabNames: Array<string> = [\n        'General',\n        'Heading',\n        \"Content\",\n        \"Buttons\",\n        \"Spacing\",\n        \"Background\",\n        \"Accents\",\n        \"Advanced\"\n    ];\n    let [tabs, setTabs] = useState([...tabNames])\n    let [currentTab, setCurrentTab] = useState('General')\n    let [fieldValues, setFieldValues] = useState<FieldValues>({})\n    let inUse: Array<string> = [\n        'title',\n        'slug',\n        'component',\n        'cssClasses',\n        'type',\n        'data',\n        'embed',\n        'hideOnMobile',\n        'hideOnDesktop',\n        'heading',\n        'headingStyle',\n        'headingAlignment',\n        'innerColor',\n        'innerTopPadding',\n        'innerBottomPadding',\n        'innerLeftPadding',\n        'innerRightPadding',\n        'mobileHeadingAlignment',\n        'headingColor',\n        'content',\n        'contentColor',\n        'alignment',\n        'mobileContentAlignment',\n        'buttons',\n        'topPadding',\n        'bottomPadding',\n        'containerWidth',\n        'backgroundImage',\n        'mobileBackgroundImage',\n        'backgroundStyle',\n        'backgroundSize',\n        'backgroundColor',\n        'backgroundColorMobile',\n        'customPath',\n        'contentLocation',\n        'secondaryContent',\n        'accents',\n        'height',\n        'backgroundVideo',\n        \"fontSize\",\n        \"accentPosition\",\n        \"images\"\n    ]\n\n    //Keep track of the field values in state so we can rerender on field change\n    if (!Object.values(fieldValues).length) {\n        let fieldIdx = 0\n        setFieldValues(Object.values(entry.fields).reduce((fields: FieldValues, field): FieldValues => {\n            fields[Object.keys(entry.fields)[fieldIdx]] = field.getValue()\n            fieldIdx++;\n            return fields\n        }, {}))\n\n        Object.values(entry.fields).forEach((field: EntryFieldAPI) => {\n            field.onValueChanged((newValue) => {\n                if (fieldValues[field.id] !== newValue) {\n                    fieldValues[field.id] = newValue\n                    setFieldValues(Object.assign({}, fieldValues))\n                }\n            })\n        })\n    }\n\n    let extraFields = Object.values(entry.fields).filter((field: EntryFieldAPI) => {\n        return !inUse.includes(field.id)\n    })\n\n\n    function renderField(field: EntryFieldAPI, type: string | null = null, label: string | null = null, instance = {}) {\n        return <Field field={field} sdk={props.sdk} locales={locales} type={type} label={label} key={'field-' + field.id} instance={instance}/>\n    }\n\n\n\n    if (tabNames.length !== tabs.length) {\n        setTabs([...tabNames])\n    }\n\n\n    return <Form spacing=\"default\" className=\"f36-margin--2xl\">\n        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n            {renderField(entry.fields.title)}\n            {renderField(entry.fields.slug)}\n        </Card>\n\n        <Tabs\n            role=\"navigation\"\n            withDivider\n        >\n            {\n                tabs.map((tab) => {\n                    return <Tab selected={currentTab === tab} id={tab} onSelect={() => setCurrentTab(tab)}\n                                key={\"tab-\" + tab}>\n                        {tab}\n                    </Tab>;\n                })\n            }\n        </Tabs>\n\n        {\n            currentTab === 'General' ?  <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.type)}\n                </Card>\n                {\n                    entry.fields.type.getValue() === 'Entry' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.component)}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Q&A' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.data, 'q&a', 'Q&A')}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Embed' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.embed)}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Images' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.images)}\n                        </Card>\n                    </div> : ''\n                }\n                {\n                    entry.fields.type.getValue() === 'Photo Stack' ? <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {renderField(entry.fields.data, 'repeatable', 'Images', {\n                                title: true,\n                                linkLabel: true,\n                                url: true,\n                                image: true,\n                            })}\n                        </Card>\n                    </div> : ''\n                }\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.hideOnMobile)}\n                    {renderField(entry.fields.hideOnDesktop)}\n                </Card>\n                {\n                    extraFields.length ?  <div>\n                        <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                            {\n                                extraFields.map((field: EntryFieldAPI) => {\n                                    return renderField(field)\n                                })\n                            }\n                        </Card>\n                    </div> : ''\n                }\n            </div>: ''\n        }\n\n        {\n            currentTab === 'Heading' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.heading)}\n                </Card>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.headingStyle)}\n                    {renderField(entry.fields.headingAlignment)}\n                    {renderField(entry.fields.mobileHeadingAlignment)}\n                    {renderField(entry.fields.headingColor)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Content' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.content)}\n                    {\n                        entry.fields.type.getValue() === 'Button Sidebar' || entry.fields.type.getValue() === 'Embed' ? renderField(entry.fields.secondaryContent) : ''\n                    }\n                </Card>\n                <Card className={\"f36-padding--l\"}>\n                    {\n                        entry.fields.type.getValue() === 'Embed' ? renderField(entry.fields.contentLocation) : ''\n                    }\n                    {renderField(entry.fields.fontSize)}\n                    {renderField(entry.fields.contentColor)}\n                    {renderField(entry.fields.alignment)}\n                    {renderField(entry.fields.mobileContentAlignment)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Buttons' ? <div>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.buttons, 'buttons')}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Spacing' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.topPadding)}\n                    {renderField(entry.fields.bottomPadding)}\n                    {renderField(entry.fields.innerTopPadding)}\n                    {renderField(entry.fields.innerBottomPadding)}\n                    {renderField(entry.fields.innerLeftPadding)}\n                    {renderField(entry.fields.innerRightPadding)}\n                </Card>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.height)}\n                    {renderField(entry.fields.containerWidth)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Background' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.backgroundImage)}\n                    {renderField(entry.fields.backgroundVideo)}\n                    {renderField(entry.fields.mobileBackgroundImage)}\n                    {renderField(entry.fields.backgroundStyle)}\n                    {renderField(entry.fields.backgroundSize)}\n                    <HelpText>\n                        Example: 50px. Defaults to 100%.\n                    </HelpText>\n                </Card>\n\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.innerColor)}\n                    {renderField(entry.fields.backgroundColor)}\n                    {renderField(entry.fields.backgroundColorMobile)}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Accents' ? <div>\n                <Card className={\"f36-padding--l f36-margin-bottom--l\"}>\n                    {renderField(entry.fields.accentPosition)}\n                    {renderField(entry.fields.accents, 'accents')}\n                </Card>\n            </div> : ''\n        }\n\n        {\n            currentTab === 'Advanced' ? <div>\n                <Card className={\"f36-padding--l\"}>\n                    {renderField(entry.fields.customPath)}\n                    {renderField(entry.fields.cssClasses)}\n                </Card>\n            </div> : ''\n        }\n\n    </Form>;\n};\n\nexport default Entry;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport {\n  AppExtensionSDK,\n  EditorExtensionSDK,\n  init,\n  locations,\n} from '@contentful/app-sdk';\nimport 'codemirror/lib/codemirror.css';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/forma-36-fcss/dist/styles.css';\nimport '@contentful/forma-36-tokens/dist/css/index.css';\nimport './index.css';\n\nimport Config from './components/ConfigScreen';\nimport EntryEditor from './components/EntryEditor';\nimport LocalhostWarning from './components/LocalhostWarning';\n\nif (process.env.NODE_ENV === 'development' && window.self === window.top) {\n  // You can remove this if block before deploying your app\n  const root = document.getElementById('root');\n  render(<LocalhostWarning />, root);\n} else {\n  init((sdk) => {\n    const root = document.getElementById('root');\n\n    // All possible locations for your app\n    // Feel free to remove unused locations\n    // Dont forget to delete the file too :)\n    const ComponentLocationSettings = [\n      {\n        location: locations.LOCATION_APP_CONFIG,\n        component: <Config sdk={sdk as AppExtensionSDK} />,\n      },\n      {\n        location: locations.LOCATION_ENTRY_EDITOR,\n        component: <EntryEditor sdk={sdk as EditorExtensionSDK} />,\n      }\n    ];\n\n    // Select a component depending on a location in which the app is rendered.\n    ComponentLocationSettings.forEach((componentLocationSetting) => {\n      if (sdk.location.is(componentLocationSetting.location)) {\n        render(componentLocationSetting.component, root);\n      }\n    });\n  });\n}\n"],"sourceRoot":""}